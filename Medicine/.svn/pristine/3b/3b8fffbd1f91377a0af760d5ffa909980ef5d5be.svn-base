using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using MetroFramework;
using MetroFramework.Forms;
using Medicine.Models;

namespace Medicine.AdminForms
{
    public partial class DiseasesList : MetroForm
    {
        public DiseasesList()
        {
            InitializeComponent();
        }

        private void btnCreate_Click(object sender, EventArgs e)
        {
            DiseasesCreate create = new DiseasesCreate(this);
            create.UpdateEventHandler += Create_UpdateEventHandler1;
            create.ShowDialog();
        }

        private void Create_UpdateEventHandler1(object sender, DiseasesCreate.UpdateEventArgs args)
        {
            BindSource();
        }

        private void btnDelete_Click(object sender, EventArgs e)
        {
            try
            {
                MedicalEntities db = new MedicalEntities();
                int id = int.Parse(grdManufacturer.SelectedRows[0].Cells[0].Value.ToString());
                Manufacturers manufacturers = db.Manufacturers.Find(id);
                db.Manufacturers.Remove(manufacturers);
                db.SaveChanges();
                BindSource();
                MessageBox.Show(this, "Hastalık başarıyla silindi.", "Başarılı", MessageBoxButtons.OK, MessageBoxIcon.Question);
            }
            catch (Exception ex)
            {
                MessageBox.Show(this, "Hastalık silinirken hata ile karşılaşıldı.", "Hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

        }
        private void Create_UpdateEventHandler(object sender, PersonelCreate.UpdateEventArgs args)
        {
            BindSource();
        }
        private void ManufacturerList_Load(object sender, EventArgs e)
        {
            BindSource();
        }
        public void BindSource()
        {
            grdManufacturer.DataSource = null;

            MedicalEntities db = new MedicalEntities();
            DataTable dt = new DataTable();
            dt.Columns.Add("ID", typeof(int));
            dt.Columns.Add("Name", typeof(string));
            foreach (var item in db.Diseases.ToList())
            {
                DataRow dr = dt.NewRow();
                dr["ID"] = item.ID;
                dr["Name"] = item.Name;
                dt.Rows.Add(dr);
            }
            grdManufacturer.DataSource = dt;
        }

        private void btnEdit_Click(object sender, EventArgs e)
        {
            DiseasesEdit edit = new DiseasesEdit(this);
            edit.UpdateEventHandler += Edit_UpdateEventHandler;
            int id = int.Parse(grdManufacturer.SelectedRows[0].Cells[0].Value.ToString());
            edit.lblId.Text = id.ToString();
            edit.ShowDialog();


        }
        private void Edit_UpdateEventHandler(object sender, DiseasesEdit.UpdateEventArgs args)
        {
            BindSource();
        }

        private void btnBack_Click(object sender, EventArgs e)
        {
            Dashboard dashboard = new Dashboard();
            this.Hide();
            dashboard.ShowDialog();
        }

        private void DiseasesList_FormClosed(object sender, FormClosedEventArgs e)
        {
            Dashboard dashboard = new Dashboard();
            this.Hide();
            dashboard.ShowDialog();
        }
    }
}
